- const htmlEscape = string => string.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
- const processURLs = string => string.replace(/(https?:\/\/\S+)/g, (url) => `<a href="${url.replace(/&amp;/g, '&')}" target="_blank">${url}</a>`);
- const processBreaks = string => string.replace(/\n/g, '<br>');

mixin weeks
  each week in values.calendar.events
    tr.align-middle
      each day in week
        - const isEmptyCell = !Array.isArray(day);
        - const [dayDate, dayEvents] = isEmptyCell ? [{ day: '' }, []] : day;
        - const dayHasEvents = dayEvents.length > 0;
        td(class=(dayHasEvents ? 'table-primary' : null))= dayDate.day

mixin tableCalendar
  table#calendar.table.table-bordered.user-select-none
    thead.table-dark.text-center
      tr.align-middle
        th(scope="col") пн
        th(scope="col") вт
        th(scope="col") ср
        th(scope="col") чт
        th(scope="col") пт
        th(scope="col") сб
        th(scope="col") вс
    tbody.text-end
      +weeks


mixin event(time, text)
  span.bg-primary.text-light.font-monospace.rounded.float-end.px-2.py-1.ms-2.mb-2 #{time}
  span #{text}

mixin eventHeader(date)
  dt.list-group-item.sticky-top.bg-dark.fw-bold.font-monospace.text-light.text-end.p-2.pe-4.m-0 #{date.toFormat('dd.MM.yyyy')}

mixin eventTime(event)
  span.bg-primary.text-light.font-monospace.rounded.float-end.px-2.py-1.ms-2.mb-2
    if (event.datetype === 'date')
      span c #{event.startDT.toFormat('dd.MM')} до #{event.endDT.toFormat('dd.MM')}
    else if (event.datetype === 'date-time' && event.referenceDT > event.startDT)
      span до #{event.endDT.toFormat('HH:mm')}
    else
      span #{event.startDT.toFormat('HH:mm')} - #{event.endDT.toFormat('HH:mm')}

mixin eventsList(dayEvents)
  - const processBreaks = (text) => text.replace(/\n/g, ' <br>');
  dd.m-0
    each event in dayEvents
      .list-group-item.clearfix
        +eventTime(event)
        span.text-break #{event.summary}
        if (event.description)
          - const preparedDescr = processBreaks(processURLs(htmlEscape(event.description)));
          p.mt-2.text-break #[span.fw-bold Описание:] !{preparedDescr}

mixin calendarEvents
  - const allEvents = values.calendar.events.flat(1).filter((e) => e).filter(([, dayEvents]) => dayEvents.length > 0);
  dl.list-group.rounded-0
    if (allEvents.length > 0)
      each dayShedule in allEvents
        - const [date, dayEvents] = dayShedule;
        +eventHeader(date)
        +eventsList(dayEvents)
    else
      dt.list-group-item.sticky-top.bg-dark.fw-bold.font-monospace.text-light.text-end.p-2.pe-4.m-0 Сегодня
      dd.text-center.mt-2 В ближайшие 30 дней нет мероприятий


.container-fluid.mt-3
  .row
    .col
      h2.h4 Календарь сообщества
      p #[span#eventsWord.px-1.py-1 Мероприятия] на 30 дней. Часовой&nbsp;пояс:&nbsp;#{values.calendar.timezone}
  .row
    .col
      include alerts
  .row.g-2.mb-3
    .col-sm
      +tableCalendar
    #container-calendar-events.col-sm.overflow-auto
      +calendarEvents
  hr
